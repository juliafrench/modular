.thumbnail > img,
.thumbnail a > img,
.carousel-inner > .item > img,
.carousel-inner > .item > a > img {
  display: block;
  max-width: 100%;
  height: auto;
}
.alert,
.field-msg,
.field-msg_success,
.field-msg_error,
.field-msg_warning,
.field-msg_info,
.field-msg_help {
  margin-top: 15px;
}
.alert:first-child,
.field-msg:first-child,
.field-msg_success:first-child,
.field-msg_error:first-child,
.field-msg_warning:first-child,
.field-msg_info:first-child,
.field-msg_help:first-child {
  margin-top: 0;
}
.alert,
.alert .alert-text,
.field-msg,
.field-msg .alert-text,
.field-msg_success,
.field-msg_success .alert-text,
.field-msg_error,
.field-msg_error .alert-text,
.field-msg_warning,
.field-msg_warning .alert-text,
.field-msg_info,
.field-msg_info .alert-text,
.field-msg_help,
.field-msg_help .alert-text {
  zoom: 1;
  overflow: hidden;
}
.alert .alert-text,
.field-msg .alert-text,
.field-msg_success .alert-text,
.field-msg_error .alert-text,
.field-msg_warning .alert-text,
.field-msg_info .alert-text,
.field-msg_help .alert-text {
  width: 10000px;
}
.alert > .pull-right,
.field-msg > .pull-right,
.field-msg_success > .pull-right,
.field-msg_error > .pull-right,
.field-msg_warning > .pull-right,
.field-msg_info > .pull-right,
.field-msg_help > .pull-right {
  padding-left: 10px;
}
.alert > .pull-left,
.alert > .icon:first-of-type,
.field-msg > .pull-left,
.field-msg > .icon:first-of-type,
.field-msg_success > .pull-left,
.field-msg_success > .icon:first-of-type,
.field-msg_error > .pull-left,
.field-msg_error > .icon:first-of-type,
.field-msg_warning > .pull-left,
.field-msg_warning > .icon:first-of-type,
.field-msg_info > .pull-left,
.field-msg_info > .icon:first-of-type,
.field-msg_help > .pull-left,
.field-msg_help > .icon:first-of-type {
  padding-right: 10px;
}
.alert > .icon:first-of-type,
.alert .alert-text,
.field-msg > .icon:first-of-type,
.field-msg .alert-text,
.field-msg_success > .icon:first-of-type,
.field-msg_success .alert-text,
.field-msg_error > .icon:first-of-type,
.field-msg_error .alert-text,
.field-msg_warning > .icon:first-of-type,
.field-msg_warning .alert-text,
.field-msg_info > .icon:first-of-type,
.field-msg_info .alert-text,
.field-msg_help > .icon:first-of-type,
.field-msg_help .alert-text {
  display: table-cell;
  vertical-align: top;
}
.dl-horizontal dd:before,
.dl-horizontal dd:after,
.container:before,
.container:after,
.container-fluid:before,
.container-fluid:after,
.row:before,
.row:after,
.btn-toolbar:before,
.btn-toolbar:after,
.navbar:before,
.navbar:after,
.navbar-header:before,
.navbar-header:after,
.navbar-collapse:before,
.navbar-collapse:after,
.pager:before,
.pager:after,
.panel-body:before,
.panel-body:after,
.well:before,
.well:after,
.modal-footer:before,
.modal-footer:after,
.list-nav:before,
.list-nav:after,
.list-nav > li ul:before,
.list-nav > li ul:after,
.nav-tabs:before,
.nav-tabs:after,
.nav-tab-justified:before,
.nav-tab-justified:after,
.nav-pill:before,
.nav-pill:after,
.nav-pill-tab:before,
.nav-pill-tab:after,
.nav-pill-justified:before,
.nav-pill-justified:after,
.nav-pill-justified:before,
.nav-pill-justified:after,
.list-menu:before,
.list-menu:after,
.container:before,
.container:after,
.form-horizontal .form-group:before,
.form-horizontal .form-group:after,
.rei-container:before,
.rei-container:after,
.rei-container:before,
.rei-container:after,
.rei-content-full:before,
.rei-content-full:after,
.rei-content-full:before,
.rei-content-full:after,
.btn-group-vertical > .btn-group:before,
.btn-group-vertical > .btn-group:after,
.valign .valign-middle:before,
.valign .valign-middle:after {
  content: " ";
  display: table;
}
.dl-horizontal dd:after,
.container:after,
.container-fluid:after,
.row:after,
.btn-toolbar:after,
.navbar:after,
.navbar-header:after,
.navbar-collapse:after,
.pager:after,
.panel-body:after,
.well:after,
.modal-footer:after,
.list-nav:after,
.list-nav > li ul:after,
.nav-tabs:after,
.nav-tab-justified:after,
.nav-pill:after,
.nav-pill-tab:after,
.nav-pill-justified:after,
.nav-pill-justified:after,
.list-menu:after,
.container:after,
.form-horizontal .form-group:after,
.rei-container:after,
.rei-container:after,
.rei-content-full:after,
.rei-content-full:after,
.btn-group-vertical > .btn-group:after,
.valign .valign-middle:after {
  clear: both;
}
.label-classification .icon {
  font-size: .5em;
  vertical-align: middle;
}
.list-responsive-sm {
  padding-left: 0;
  list-style: none;
}
.list-responsive-sm > li {
  padding-bottom: 12px;
}
.list-responsive-sm > li ul {
  padding-top: 12px;
  padding-left: 0;
  list-style: none;
}
.list-responsive-sm > li ul > li {
  padding-bottom: 12px;
}
.list-responsive-sm > li ul > li:before {
  font: normal normal normal 12px/1 'rei-icons';
  speak: none;
  transform: translate(0, 0);
  text-transform: none;
  text-rendering: auto;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\e738";
}
.list-responsive-sm > li ul > li:before {
  margin: 0;
}
.list-responsive-sm > li ul > li:last-of-type {
  padding-bottom: 0;
}
.list-responsive-sm > li:last-of-type {
  padding-bottom: 0;
}
@media (min-width: 768px) {
  .list-responsive-sm {
    padding-left: 0;
    list-style: none;
  }
  .list-responsive-sm > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px;
  }
  .list-responsive-sm > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-sm > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-sm > li {
    display: inline-block;
    padding: 0;
  }
  .list-responsive-sm > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-sm > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-sm.list-inline-md > li {
    padding: 0 16px;
  }
  .list-responsive-sm.list-inline-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-sm.list-inline-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-sm.list-inline-lg > li {
    padding-right: 29px;
  }
}
.list-responsive-md {
  padding-left: 0;
  list-style: none;
}
.list-responsive-md > li {
  padding-bottom: 12px;
}
.list-responsive-md > li ul {
  padding-top: 12px;
  padding-left: 0;
  list-style: none;
}
.list-responsive-md > li ul > li {
  padding-bottom: 12px;
}
.list-responsive-md > li ul > li:before {
  font: normal normal normal 12px/1 'rei-icons';
  speak: none;
  transform: translate(0, 0);
  text-transform: none;
  text-rendering: auto;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\e738";
}
.list-responsive-md > li ul > li:before {
  margin: 0;
}
.list-responsive-md > li ul > li:last-of-type {
  padding-bottom: 0;
}
.list-responsive-md > li:last-of-type {
  padding-bottom: 0;
}
@media (min-width: 992px) {
  .list-responsive-md {
    padding-left: 0;
    list-style: none;
  }
  .list-responsive-md > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px;
  }
  .list-responsive-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-md > li {
    display: inline-block;
    padding: 0;
  }
  .list-responsive-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-md.list-inline-md > li {
    padding: 0 16px;
  }
  .list-responsive-md.list-inline-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-md.list-inline-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-md.list-inline-lg > li {
    padding-right: 29px;
  }
}
.field-msg,
.field-msg_success,
.field-msg_error,
.field-msg_warning,
.field-msg_info,
.field-msg_help {
  margin: 0 0 12px 0;
  padding: 6px 0 6px 20px;
}
.overlay-dark-1 .field-msg,
.overlay-dark-2 .field-msg,
.overlay-medium-1 .field-msg,
.overlay-outlet-dark-1 .field-msg,
.overlay-explore-dark .field-msg,
.field-msg .overlay-explore-light,
.overlay-dark-1 .field-msg_success,
.overlay-dark-2 .field-msg_success,
.overlay-medium-1 .field-msg_success,
.overlay-outlet-dark-1 .field-msg_success,
.overlay-explore-dark .field-msg_success,
.field-msg_success .overlay-explore-light,
.overlay-dark-1 .field-msg_error,
.overlay-dark-2 .field-msg_error,
.overlay-medium-1 .field-msg_error,
.overlay-outlet-dark-1 .field-msg_error,
.overlay-explore-dark .field-msg_error,
.field-msg_error .overlay-explore-light,
.overlay-dark-1 .field-msg_warning,
.overlay-dark-2 .field-msg_warning,
.overlay-medium-1 .field-msg_warning,
.overlay-outlet-dark-1 .field-msg_warning,
.overlay-explore-dark .field-msg_warning,
.field-msg_warning .overlay-explore-light,
.overlay-dark-1 .field-msg_info,
.overlay-dark-2 .field-msg_info,
.overlay-medium-1 .field-msg_info,
.overlay-outlet-dark-1 .field-msg_info,
.overlay-explore-dark .field-msg_info,
.field-msg_info .overlay-explore-light,
.overlay-dark-1 .field-msg_help,
.overlay-dark-2 .field-msg_help,
.overlay-medium-1 .field-msg_help,
.overlay-outlet-dark-1 .field-msg_help,
.overlay-explore-dark .field-msg_help,
.field-msg_help .overlay-explore-light {
  background-color: #ffffff;
  color: #222222;
}
.overlay-dark-1 .field-msg:focus,
.overlay-dark-2 .field-msg:focus,
.overlay-medium-1 .field-msg:focus,
.overlay-outlet-dark-1 .field-msg:focus,
.overlay-explore-dark .field-msg:focus,
.field-msg .overlay-explore-light:focus,
.overlay-dark-1 .field-msg:active,
.overlay-dark-2 .field-msg:active,
.overlay-medium-1 .field-msg:active,
.overlay-outlet-dark-1 .field-msg:active,
.overlay-explore-dark .field-msg:active,
.field-msg .overlay-explore-light:active,
.overlay-dark-1 .field-msg_success:focus,
.overlay-dark-2 .field-msg_success:focus,
.overlay-medium-1 .field-msg_success:focus,
.overlay-outlet-dark-1 .field-msg_success:focus,
.overlay-explore-dark .field-msg_success:focus,
.field-msg_success .overlay-explore-light:focus,
.overlay-dark-1 .field-msg_success:active,
.overlay-dark-2 .field-msg_success:active,
.overlay-medium-1 .field-msg_success:active,
.overlay-outlet-dark-1 .field-msg_success:active,
.overlay-explore-dark .field-msg_success:active,
.field-msg_success .overlay-explore-light:active,
.overlay-dark-1 .field-msg_error:focus,
.overlay-dark-2 .field-msg_error:focus,
.overlay-medium-1 .field-msg_error:focus,
.overlay-outlet-dark-1 .field-msg_error:focus,
.overlay-explore-dark .field-msg_error:focus,
.field-msg_error .overlay-explore-light:focus,
.overlay-dark-1 .field-msg_error:active,
.overlay-dark-2 .field-msg_error:active,
.overlay-medium-1 .field-msg_error:active,
.overlay-outlet-dark-1 .field-msg_error:active,
.overlay-explore-dark .field-msg_error:active,
.field-msg_error .overlay-explore-light:active,
.overlay-dark-1 .field-msg_warning:focus,
.overlay-dark-2 .field-msg_warning:focus,
.overlay-medium-1 .field-msg_warning:focus,
.overlay-outlet-dark-1 .field-msg_warning:focus,
.overlay-explore-dark .field-msg_warning:focus,
.field-msg_warning .overlay-explore-light:focus,
.overlay-dark-1 .field-msg_warning:active,
.overlay-dark-2 .field-msg_warning:active,
.overlay-medium-1 .field-msg_warning:active,
.overlay-outlet-dark-1 .field-msg_warning:active,
.overlay-explore-dark .field-msg_warning:active,
.field-msg_warning .overlay-explore-light:active,
.overlay-dark-1 .field-msg_info:focus,
.overlay-dark-2 .field-msg_info:focus,
.overlay-medium-1 .field-msg_info:focus,
.overlay-outlet-dark-1 .field-msg_info:focus,
.overlay-explore-dark .field-msg_info:focus,
.field-msg_info .overlay-explore-light:focus,
.overlay-dark-1 .field-msg_info:active,
.overlay-dark-2 .field-msg_info:active,
.overlay-medium-1 .field-msg_info:active,
.overlay-outlet-dark-1 .field-msg_info:active,
.overlay-explore-dark .field-msg_info:active,
.field-msg_info .overlay-explore-light:active,
.overlay-dark-1 .field-msg_help:focus,
.overlay-dark-2 .field-msg_help:focus,
.overlay-medium-1 .field-msg_help:focus,
.overlay-outlet-dark-1 .field-msg_help:focus,
.overlay-explore-dark .field-msg_help:focus,
.field-msg_help .overlay-explore-light:focus,
.overlay-dark-1 .field-msg_help:active,
.overlay-dark-2 .field-msg_help:active,
.overlay-medium-1 .field-msg_help:active,
.overlay-outlet-dark-1 .field-msg_help:active,
.overlay-explore-dark .field-msg_help:active,
.field-msg_help .overlay-explore-light:active {
  border-color: #ffffff;
}
.form-inline .field-msg .alert-text,
.form-inline .field-msg_success .alert-text,
.form-inline .field-msg_error .alert-text,
.form-inline .field-msg_warning .alert-text,
.form-inline .field-msg_info .alert-text,
.form-inline .field-msg_help .alert-text {
  width: auto;
}
.field-msg_success .alert-text {
  color: inherit;
}
.field-msg_info .alert-text,
.field-msg_help .alert-text {
  color: inherit;
}
.field-msg_warning .alert-text {
  color: inherit;
}
.field-msg_error .alert-text {
  color: #cc0000;
}
label .icon {
  font-size: .5em;
  vertical-align: middle;
}
.radio label,
.checkbox label {
  font: normal 16px "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.25;
}
.required-form:before .icon {
  font-size: .5em;
  vertical-align: middle;
}
.remove-toggle.remove-right .icon-rei-close-small {
  color: #ffffff;
  background-color: #000000;
  border-color: #000000;
}
.btn-group-lg > .btn {
  padding: 13px 32px;
  font-family: "Anderson 1938", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 24px;
  line-height: 1;
}
.btn-group-sm > .btn {
  padding: 6px 24px;
  font-family: "Interstate Bold Condensed", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 18px;
  line-height: 1.5;
}
.btn-group-xs > .btn {
  padding: 3px 16px;
  font-family: "Interstate Bold Condensed", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: 1.5;
}
/* ====================================== *
 * ==========   COMMON STYLES  ========== *
 * ====================================== */
h1 .icon,
h2 .icon,
h3 .icon,
h4 .icon,
h5 .icon,
h6 .icon,
.h1 .icon,
.h2 .icon,
.h3 .icon,
.h4 .icon,
.h5 .icon,
.h6 .icon {
  font-size: .5em;
  vertical-align: middle;
}
.well-lg {
  padding: 30px;
}
.vertical-push-xl {
  margin-bottom: 30px;
}
.vertical-pull-xl {
  margin-top: 30px;
}
/* prevent underlines when icons used with links. not part of
   the PL yet but ERL calls for this rule on standalone links.
   not sure if this would apply to all links so let's revisit
   with hewson */
a:hover .icon:before,
a:focus .icon:before {
  display: inline-block;
  text-decoration: none;
}
/* can we utilize the following for all  widgets needing
   vertically centered content? */
.valign {
  position: relative;
}
.valign-middle {
  position: absolute;
  top: 50%;
  -webkit-transform: translate(0, -50%);
  -moz-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  -o-transform: translate(0, -50%);
  transform: translate(0, -50%);
}
.icon-size-match .icon {
  font-size: inherit;
}
.btn {
  line-height: 26px;
}
.btn .icon {
  padding-left: 10px;
  line-height: inherit;
  vertical-align: top;
}
/* Utility Classes */
.row.no-gutters .row {
  margin-right: 0;
  margin-left: 0;
}
.row.no-gutters [class^="col-"],
.row.no-gutters [class*=" col-"] {
  padding-right: 0;
  padding-left: 0;
}
[class^="col-"].no-gutter,
[class*=" col-"].no-gutter {
  padding-right: 0;
  padding-left: 0;
}
/* can we utilize the following for all  widgets needing
   vertically centered content? */
.valign {
  position: relative;
}
.valign .valign-middle {
  position: absolute;
  top: 50%;
  width: 100%;
  margin-left: 0;
  margin-right: 0;
  -webkit-transform: translate(0, -50%);
  -moz-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  -o-transform: translate(0, -50%);
  transform: translate(0, -50%);
  -webkit-transform: rotate(0.0001deg) translate(0, -50%);
  -moz-transform: rotate(0.0001deg) translate(0, -50%);
  -ms-transform: rotate(0.0001deg) translate(0, -50%);
  -o-transform: rotate(0.0001deg) translate(0, -50%);
  transform: rotate(0.0001deg) translate(0, -50%);
}
@media (min-width: 768px) {
  .valign .valign-middle {
    margin-left: 0;
    margin-right: 0;
  }
}
@media (min-width: 992px) {
  .valign .valign-middle {
    margin-left: 0;
    margin-right: 0;
  }
}
/* Maintain aspect ratios */
.ratio {
  position: relative;
  width: 100%;
}
.ratio .ratio-item {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  /* Vertical centering with ratio maintenance don't play nice together at xs */
}
.ratio .ratio-item > img {
  min-width: 100%;
  min-height: 100%;
}
@media (max-width: 767px) {
  .ratio .ratio-item.valign {
    position: relative;
  }
  .ratio .ratio-item.valign .valign-middle {
    position: relative;
    -webkit-transform: rotate(0deg) translate(0, 0);
    -moz-transform: rotate(0deg) translate(0, 0);
    -ms-transform: rotate(0deg) translate(0, 0);
    -o-transform: rotate(0deg) translate(0, 0);
    transform: rotate(0deg) translate(0, 0);
  }
}
.ratio-xs-1by1 {
  padding-bottom: 100%;
}
.ratio-xs-5by2 {
  padding-bottom: 40%;
}
.ratio-xs-2by1 {
  padding-bottom: 50%;
}
.ratio-xs-16by9 {
  padding-bottom: 56.25%;
}
.ratio-xs-3by2 {
  padding-bottom: 66.66666667%;
}
.ratio-xs-4by3 {
  padding-bottom: 75%;
}
@media (min-width: 768px) {
  .ratio-sm-1by1 {
    padding-bottom: 100%;
  }
  .ratio-sm-5by2 {
    padding-bottom: 40%;
  }
  .ratio-sm-2by1 {
    padding-bottom: 50%;
  }
  .ratio-sm-16by9 {
    padding-bottom: 56.25%;
  }
  .ratio-sm-3by2 {
    padding-bottom: 66.66666667%;
  }
  .ratio-sm-4by3 {
    padding-bottom: 75%;
  }
}
@media (min-width: 992px) {
  .ratio-md-1by1 {
    padding-bottom: 100%;
  }
  .ratio-md-5by2 {
    padding-bottom: 40%;
  }
  .ratio-md-2by1 {
    padding-bottom: 50%;
  }
  .ratio-md-16by9 {
    padding-bottom: 56.25%;
  }
  .ratio-md-3by2 {
    padding-bottom: 66.66666667%;
  }
  .ratio-md-4by3 {
    padding-bottom: 75%;
  }
}
@media (min-width: 1200px) {
  .ratio-lg-1by1 {
    padding-bottom: 100%;
  }
  .ratio-lg-5by2 {
    padding-bottom: 40%;
  }
  .ratio-lg-2by1 {
    padding-bottom: 50%;
  }
  .ratio-lg-16by9 {
    padding-bottom: 56.25%;
  }
  .ratio-lg-3by2 {
    padding-bottom: 66.66666667%;
  }
  .ratio-lg-4by3 {
    padding-bottom: 75%;
  }
}
/* selective text underline when multiple text elements
   wrapped in <a> tag. content cards are a good example */
.selective-underline:hover,
.selective-underline:focus {
  text-decoration: none;
}
.selective-underline:hover .underline,
.selective-underline:focus .underline {
  text-decoration: underline;
}
.label-classification {
  border-color: inherit;
}
h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  color: inherit;
}
.list-responsive-sm {
  padding-left: 0;
  list-style: none;
}
.list-responsive-sm > li {
  padding-bottom: 12px;
}
.list-responsive-sm > li ul {
  padding-top: 12px;
  padding-left: 0;
  list-style: none;
}
.list-responsive-sm > li ul > li {
  padding-bottom: 12px;
}
.list-responsive-sm > li ul > li:before {
  font: normal normal normal 12px/1 'rei-icons';
  speak: none;
  transform: translate(0, 0);
  text-transform: none;
  text-rendering: auto;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\e738";
}
.list-responsive-sm > li ul > li:before {
  margin: 0;
}
.list-responsive-sm > li ul > li:last-of-type {
  padding-bottom: 0;
}
.list-responsive-sm > li:last-of-type {
  padding-bottom: 0;
}
@media (min-width: 768px) {
  .list-responsive-sm {
    padding-left: 0;
    list-style: none;
  }
  .list-responsive-sm > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px;
  }
  .list-responsive-sm > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-sm > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-sm > li {
    display: inline-block;
    padding: 0;
  }
  .list-responsive-sm > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-sm > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-sm.list-inline-md > li {
    padding: 0 16px;
  }
  .list-responsive-sm.list-inline-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-sm.list-inline-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-sm.list-inline-lg > li {
    padding-right: 29px;
  }
}
.list-responsive-sm {
  padding-left: 0;
  list-style: none;
}
.list-responsive-sm > li {
  padding-bottom: 12px;
}
.list-responsive-sm > li ul {
  padding-top: 12px;
  padding-left: 0;
  list-style: none;
}
.list-responsive-sm > li ul > li {
  padding-bottom: 12px;
}
.list-responsive-sm > li ul > li:before {
  font: normal normal normal 12px/1 'rei-icons';
  speak: none;
  transform: translate(0, 0);
  text-transform: none;
  text-rendering: auto;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\e738";
}
.list-responsive-sm > li ul > li:before {
  margin: 0;
}
.list-responsive-sm > li ul > li:last-of-type {
  padding-bottom: 0;
}
.list-responsive-sm > li:last-of-type {
  padding-bottom: 0;
}
@media (min-width: 768px) {
  .list-responsive-sm {
    padding-left: 0;
    list-style: none;
  }
  .list-responsive-sm > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px;
  }
  .list-responsive-sm > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-sm > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-sm > li {
    display: inline-block;
    padding: 0;
  }
  .list-responsive-sm > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-sm > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-sm.list-inline-md > li {
    padding: 0 16px;
  }
  .list-responsive-sm.list-inline-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-sm.list-inline-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-sm.list-inline-lg > li {
    padding-right: 29px;
  }
}
.list-responsive-md {
  padding-left: 0;
  list-style: none;
}
.list-responsive-md > li {
  padding-bottom: 12px;
}
.list-responsive-md > li ul {
  padding-top: 12px;
  padding-left: 0;
  list-style: none;
}
.list-responsive-md > li ul > li {
  padding-bottom: 12px;
}
.list-responsive-md > li ul > li:before {
  font: normal normal normal 12px/1 'rei-icons';
  speak: none;
  transform: translate(0, 0);
  text-transform: none;
  text-rendering: auto;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\e738";
}
.list-responsive-md > li ul > li:before {
  margin: 0;
}
.list-responsive-md > li ul > li:last-of-type {
  padding-bottom: 0;
}
.list-responsive-md > li:last-of-type {
  padding-bottom: 0;
}
@media (min-width: 992px) {
  .list-responsive-md {
    padding-left: 0;
    list-style: none;
  }
  .list-responsive-md > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px;
  }
  .list-responsive-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-md > li {
    display: inline-block;
    padding: 0;
  }
  .list-responsive-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-md.list-inline-md > li {
    padding: 0 16px;
  }
  .list-responsive-md.list-inline-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-md.list-inline-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-md.list-inline-lg > li {
    padding-right: 29px;
  }
}
.list-responsive-md {
  padding-left: 0;
  list-style: none;
}
.list-responsive-md > li {
  padding-bottom: 12px;
}
.list-responsive-md > li ul {
  padding-top: 12px;
  padding-left: 0;
  list-style: none;
}
.list-responsive-md > li ul > li {
  padding-bottom: 12px;
}
.list-responsive-md > li ul > li:before {
  font: normal normal normal 12px/1 'rei-icons';
  speak: none;
  transform: translate(0, 0);
  text-transform: none;
  text-rendering: auto;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\e738";
}
.list-responsive-md > li ul > li:before {
  margin: 0;
}
.list-responsive-md > li ul > li:last-of-type {
  padding-bottom: 0;
}
.list-responsive-md > li:last-of-type {
  padding-bottom: 0;
}
@media (min-width: 992px) {
  .list-responsive-md {
    padding-left: 0;
    list-style: none;
  }
  .list-responsive-md > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px;
  }
  .list-responsive-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-md > li {
    display: inline-block;
    padding: 0;
  }
  .list-responsive-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-md.list-inline-md > li {
    padding: 0 16px;
  }
  .list-responsive-md.list-inline-md > li:first-of-type {
    padding-left: 0;
  }
  .list-responsive-md.list-inline-md > li:last-of-type {
    padding-right: 0;
  }
  .list-responsive-md.list-inline-lg > li {
    padding-right: 29px;
  }
}
.vertical-push-sm {
  margin-bottom: 8px;
}
.vertical-pull-sm {
  margin-top: 8px;
}
/* ====================================== *
 * ==========   WIDGET: HERO   ========== *
 * ====================================== */
.widget-hero {
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 500px;
  /* are there any PL/ERL rules for overriding heading/paragraph 
       colors when nested in <a> tags? */
}
.widget-hero a {
  color: inherit;
}
/* ====================================== *
 * ====   WIDGET: PRODUCT HIGHLIGHT  ==== *
 * ====================================== */
/* currently overriding a bootstrap generic. we should think about
   adding theme styles (explore, overlay-dark, etc.) to the PL.
   need designers to do exploration and add to ERL */
.img-thumbnail {
  border: 4px solid #a1c900;
  padding: 0;
}
/* ====================================== *
 * ===   WIDGET: IMAGE WITH OVERLAY   === *
 * ====================================== */
.widget-image-with-overlay {
  background-repeat: no-repeat;
  background-size: cover;
  overflow: hidden;
  position: relative;
}
.widget-image-with-overlay .overlay {
  position: relative;
}
.widget-image-with-overlay .overlay.with-transparent-bg:before {
  content: '';
  height: 100%;
  left: 0;
  min-height: inherit;
  -ms-filter: progid:DXImageTransform.Microsoft.Alpha( Opacity= 50 );
  opacity: 0.5;
  position: absolute;
  top: 0;
  width: 100%;
}
.widget-image-with-overlay .overlay.with-transparent-bg.dark {
  color: #ffffff;
}
.widget-image-with-overlay .overlay.with-transparent-bg.dark:before {
  background-color: #000000;
}
.widget-image-with-overlay .overlay.with-transparent-bg.light {
  color: #222222;
}
.widget-image-with-overlay .overlay.with-transparent-bg.light:before {
  background-color: #ffffff;
}
.widget-image-with-overlay .overlay .content {
  position: relative;
}
/* ====================================== *
 * =======   WIDGET: SPLIT-PANE   ======= *
 * ====================================== */
.widget-split-pane .pane-group {
  display: table;
  width: 100%;
}
@media (min-width: 768px) {
  .widget-split-pane .pane-group {
    table-layout: fixed;
  }
}
.widget-split-pane .pane-group .pane {
  position: relative;
  display: block;
  float: none;
  overflow: hidden;
  vertical-align: middle;
}
@media (min-width: 768px) {
  .widget-split-pane .pane-group .pane {
    display: table-cell;
  }
}
.widget-split-pane .pane-group .pane.image {
  padding: 0;
}
@media (max-width: 768px) {
  .widget-split-pane .pane-group .pane.image {
    height: auto !important;
  }
}
.widget-split-pane .pane-group .pane.image .image-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
}
.widget-split-pane .pane-group .pane.image img {
  width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
  -o-object-fit: cover;
  object-fit: cover;
  -o-object-position: center;
  object-position: center;
}
@media (min-width: 768px) {
  .widget-split-pane .pane-group .pane.image img {
    position: absolute;
    top: 50%;
    left: 50%;
    width: auto;
    max-width: none;
    max-height: none;
    min-width: 100%;
    min-height: 100%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}
.widget-split-pane .pane-group .pane.copy.explore {
  color: #222222;
  background-color: #a1c900;
}
.widget-split-pane .pane-group .pane.copy.explore .ctas .btn-explore {
  color: #a1c900;
  border-color: #004e00;
  background-color: #004e00;
}
.widget-split-pane .pane-group .pane.copy.explore .ctas .btn-link {
  color: #004e00;
}
/* ====================================== *
 * =====   WIDGET: PRODUCT GRID 4X  ===== *
 * ====================================== */
.widget-product-grid .product {
  margin-bottom: 24px;
}
.widget-product-grid .product a img {
  width: auto;
  max-height: 100%;
  min-width: 75%;
  margin: 0 auto;
}
/* ====================================== *
 * ======   WIDGET: CONTENT CARDS   ===== *
 * ====================================== */
.widget-content-cards a {
  color: inherit;
}
.widget-content-cards a img {
  width: 100%;
}

/*# sourceMappingURL=data:application/json;base64, */